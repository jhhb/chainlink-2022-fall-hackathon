import Head from "next/head";
import { AuthenticatedActionsProvider } from "../components/AuthenticatedActionsProvider";
import { UnauthenticatedActions } from "../components/UnauthenticatedActions";
import styles from "../styles/Home.module.css";
import { useMoralis } from "react-moralis";

export default function Home() {
  const { isWeb3Enabled, account, chainId } = useMoralis();
  const renderAuthenticatedContent = isWeb3Enabled && account;

  return (
    <div className={styles.container}>
      <Head>
        <title>VRF Magic 8 Ball</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {renderAuthenticatedContent ? (
          <AuthenticatedContent account={account} chainId={chainId} />
        ) : (
          <UnauthenticatedActions />
        )}
      </main>

      <footer className={styles.footer}>
        <div>Made by James Boyle</div>
      </footer>
    </div>
  );
}

interface AuthenticatedContentProps {
  chainId: string | null;
  account: string;
}

function AuthenticatedContent(props: AuthenticatedContentProps) {
  const { chainId, account } = props;
  const supportedChainId = chainId && isSupportedChainId(chainId.toString());
  if (supportedChainId) {
    return <AuthenticatedActionsProvider account={account} />;
  } else {
    return <div>Chain is not supported</div>;
  }
}

// TODO: JB - Clean this up. Also look into using the "underlying network changed" Moralis trigger.
function isSupportedChainId(chainId: string): boolean {
  const hardhatChainId = "0x7a69";
  const goerliChainId = "0x5";
  return [hardhatChainId, goerliChainId].includes(chainId);
}
