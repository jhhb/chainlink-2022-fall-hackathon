import { COLORS } from "../utils";
import { AuthenticatedActionsProvider } from "../components/AuthenticatedActionsProvider";
import { Footer } from "../components/Footer";
import Head from "next/head";
import { Hero } from "@web3uikit/core";
import { UnauthenticatedActions } from "../components/UnauthenticatedActions";
import styles from "../styles/Home.module.css";
import { useMoralis } from "react-moralis";
import { SupportedChain, findSupportedChain } from "../utils/config";

export default function Home() {
  const { isWeb3Enabled, account, web3 } = useMoralis();
  const renderAuthenticatedContent = isWeb3Enabled && account;
  const chainId: number | undefined = web3?.network?.chainId;
  const resolvedChain = findSupportedChain(chainId);

  return (
    <div className={styles.container}>
      <Head>
        <title>VRF Magic 8 Ball</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <header className={styles.header}>
        <Hero
          align="right"
          rounded="0px"
          textColor={COLORS.white}
          title="The World's First Verifiably Random Magic 8 Ball"
          backgroundColor={COLORS.biscay}
        />
      </header>

      <main className={styles.main}>
        {renderAuthenticatedContent ? (
          <AuthenticatedContent account={account} chain={resolvedChain} />
        ) : (
          <UnauthenticatedActions />
        )}
      </main>
      <Footer />
    </div>
  );
}

interface AuthenticatedContentProps {
  chain?: SupportedChain;
  account: string;
}

function AuthenticatedContent(props: AuthenticatedContentProps) {
  const { chain, account } = props;
  if (chain) {
    return (
      <AuthenticatedActionsProvider account={account} currentChain={chain} />
    );
  } else {
    return <div>Chain is not supported</div>;
  }
}
